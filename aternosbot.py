import discord
import sl_commands
import sys
import os
from loguru import logger
from exceptions import NoAnyRoleAttribute



class Aternos(discord.Client):
    driver = sl_commands.get_driver()
    SERVER_IP = ''
    SERVER_VERSION = ''
    _CONFIGS = sl_commands.get_configs()
    _SERVER_NUMBER = _CONFIGS['SERVER_NUMBER']
    _AUTH_NAME = _CONFIGS['AUTH_NAME']
    _AUTH_PASSWORD = _CONFIGS['AUTH_PASSWORD']
    _EXPECT_ROLE_NAME = _CONFIGS['ROLE_NAME']
    _EXPECT_ROLE_ID = _CONFIGS['ROLE_ID']

    if not _EXPECT_ROLE_ID and not _EXPECT_ROLE_NAME:
        logger.critical('Raise the exception...')
        raise NoAnyRoleAttribute


    async def on_ready(self):
        sl_commands.select_server(self.driver, auth_name=self._AUTH_NAME, auth_pass=self._AUTH_PASSWORD, server_num=self._SERVER_NUMBER)

        self.SERVER_IP = await sl_commands.get_ip(self.driver)
        self.SERVER_VERSION = await sl_commands.get_version(self.driver)

        logger.info(f'{self.user} Bot has authorized and is ready!')
        logger.info(f'Current server: {self.SERVER_IP}')


    async def on_message(self, message):
        if message.author == self.user:
                return

        has_role = False
        roles = message.author.roles

        """If user has not needed role, bot will not perform command"""
        for role in roles:
            if role.id == int(self._EXPECT_ROLE_ID) or role.name == str(self._EXPECT_ROLE_NAME):
                has_role = True
                break
        
        # return if user has no role
        if not has_role:
            return
        
        logger.info(f'User {message.author} tried to run command {message.content}')

        sl_commands.go_over_block(self.driver)
        status = await sl_commands.get_status(self.driver)


        if message.content.startswith('.–∑–∞–ø—É—Å') or message.content.startswith('.–æ—Ç–∫—Ä'):
            if status.startswith("–û—Ñ—Ñ–ª"):
                await message.channel.send('üéâ –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤–∞—Å...')
                await sl_commands.launch_server(self.driver)

                await message.channel.send('‚è≥ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –∑–∞–ø—É—Å–∫—É! –ñ–¥—ë–º –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–∏...')
                await sl_commands.timer(self.driver)

                await message.reply('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
            else:
                logger.error(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä\n–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ –±—ã–ª: {status}')
                await message.channel.send(f'‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ **{status.lower()}**.\n–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –µ–≥–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å!')


        if message.content.startswith('.–∑–∞–∫—Ä'):
            if status.startswith("–û–Ω–ª–∞"):
                await message.channel.send('üòû –£–∂–µ —É—Ö–æ–¥–∏—Ç–µ? –ö–∞–∫ –∂–∞–ª—å. –ó–∞–∫—Ä—ã–≤–∞—é —Å–µ—Ä–≤–µ—Ä...')
                await sl_commands.stop_server(self.driver)

                await sl_commands.timer(self.driver, condition="–û—Ñ—Ñ–ª–∞–π–Ω")

                await message.reply('‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω!')
            else:
                logger.error(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–≥ –∑–∞–∫—Ä—ã—Ç—å —Å–µ—Ä–≤–µ—Ä\n–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ –±—ã–ª: {status}')
                await message.channel.send(f'‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ **{status.lower()}**.\n–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –µ–≥–æ –∑–∞–∫—Ä—ã—Ç—å!')


        if message.content.startswith('.—Å—Ç–∞—Ç—É—Å'):
            left_time = await sl_commands.get_left_time(self.driver)
            if status.startswith('–û–Ω–ª–∞') and left_time:
                await message.reply(f'‚ú® –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞: {status.lower()}!\nüïí –í—Ä–µ–º–µ–Ω–∏ –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è: {left_time}')
                return
            await message.reply(f'–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞: {status.lower()}!')


        if message.content.startswith('.–∏–Ω—Ñ–æ'):
            players = await sl_commands.get_players(self.driver)
            tps = await sl_commands.get_tps(self.driver)

            await message.channel.send(f'**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ:**\n\n‚ú® –°—Ç–∞—Ç—É—Å –°–µ—Ä–≤–µ—Ä–∞: {status}\nüë• –ò–≥—Ä–æ–∫–æ–≤ –Ω–∞ –°–µ—Ä–≤–µ—Ä–µ: {players}\n‚è≤ TPS –°–µ—Ä–≤–µ—Ä–∞: {tps}\nüíé IP –°–µ—Ä–≤–µ—Ä–∞: {self.SERVER_IP}\nüé´ –í–µ—Ä—Å–∏—è –°–µ—Ä–≤–µ—Ä–∞: {self.SERVER_VERSION}')


        if message.content.startswith('.—Ö–µ–ª–ø') or message.content.startswith('.–ø–æ–º–æ'):
            await message.reply(f'**–í–æ—Ç –∫–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**\n\n.–∑–∞–ø—É—Å–∫ / .–∑–∞–ø—É—Å—Ç–∏ / .–∑–∞–ø—É—Å—Ç–∏—Ç—å --> –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä\n.–∑–∞–∫—Ä–æ–π / .–∑–∞–∫—Ä—ã—Ç—å --> –ó–∞–∫—Ä—ã—Ç—å —Å–µ—Ä–≤–µ—Ä\n.—Å—Ç–∞—Ç—É—Å --> –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∏ –≤—Ä–µ–º—è –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–µ—Ä–≤–µ—Ä–∞\n.–∏–Ω—Ñ–æ --> –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ\n.—Ö–µ–ª–ø / .–ø–æ–º–æ—â—å / .–ø–æ–º–æ–≥–∏ --> –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.')


        if message.content.startswith('.cl'):
            """Close the driver if it needs"""
            self.driver.close()
            sys.exit()


if __name__ == "__main__":
    intents = discord.Intents.default()
    intents.message_content = True

    TOKEN = str(os.getenv('BOT_TOKEN'))

    bot = Aternos(intents=intents)
    bot.run(token=TOKEN)
